var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Department = /** @class */ (function () {
    function Department(name) {
        this.name = name;
    }
    Department.prototype.addHolidays = function (holidays) {
        if (Array.isArray(holidays)) {
            for (var _i = 0, holidays_1 = holidays; _i < holidays_1.length; _i++) {
                var holiday = holidays_1[_i];
                this.holidays.push(holiday);
            }
        }
    };
    return Department;
}());
var ItDepartment = /** @class */ (function (_super) {
    __extends(ItDepartment, _super);
    function ItDepartment() {
        var _this = _super.call(this, "IT Deparmtent") || this;
        _this.holidays = [];
        return _this;
    }
    return ItDepartment;
}(Department));
var AdminDepartent = /** @class */ (function (_super) {
    __extends(AdminDepartent, _super);
    function AdminDepartent() {
        var _this = _super.call(this, "Admin Department") || this;
        _this.holidays = [];
        return _this;
    }
    return AdminDepartent;
}(Department));
var itDepartment = new ItDepartment();
// This is something that we don't want our code to do for us we don't want
//  to make the constructor public so that any other departments can be created from the child classes
// we don't want to make the value acessible to the outside users 
var argiDepartment = new ItDepartment();
var itHolidays = [
    {
        date: new Date(2025, 11, 11),
        reason: "Admin Department Day",
    },
    {
        date: new Date(2025, 11, 12),
        reason: "Christmas",
    }
];
var firstItDepartment = new ItDepartment();
var adminDepart = new AdminDepartent();
firstItDepartment.addHolidays(itHolidays);
adminDepart.addHolidays(itHolidays);
console.log(firstItDepartment.addHolidays(itHolidays));
console.log(adminDepart.addHolidays(itHolidays));
